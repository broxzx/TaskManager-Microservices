server:
  port: 0

spring:
  application:
    name: kafka-message-service

  kafka:
    bootstrap-servers: http://localhost:9092
    consumer:
      group-id: message-service
      auto-offset-reset: earliest

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8280/realms/task-manager-microservices
            user-name-attribute: preferred_username
        registration:
          keycloak:
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
            client-id: kafka-message-service
            client-secret: 5PWMhEBYdXinYreRb8MZEZj7yNTxdGe7
            scope:
              - openid
              - microprofile-jwt
              - metrics
            authorization-grant-type: client_credentials
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8280/realms/task-manager-microservices/protocol/openid-connect/certs

eureka:
  instance:
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 10
  client:
    registry-fetch-interval-seconds: 10
    service-url:
      defaultZone: http://localhost:8761/eureka

kafka:
  forgot-password-topic: forgot-password

logging:
  level:
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.security.web.access.intercept.FilterSecurityInterceptor: DEBUG
    org.springframework.security.access.vote.AffirmativeBased: DEBUG
    org.springframework.security.access.vote.AuthenticatedVoter: DEBUG