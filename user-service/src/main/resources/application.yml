server:
  port: 0

spring:
  application:
    name: user-service

  config:
    import: "optional:configserver:http://localhost:8888"

  data:
    mongodb:
      database: user-db
      host: localhost
      port: 27016


  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate

  flyway:
    enabled: true
    user: admin
    password: admin
    schemas:
      - public


  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8280/realms/task-manager-microservices
            user-name-attribute: preferred_username
        registration:
          keycloak:
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
            client-id: user-service
            client-secret: OIdp06uPaJgdwH1meKRatic6zuLbFLDQ
            scope:
              - openid
              - microprofile-jwt
              - metrics
            authorization-grant-type: client_credentials
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8280/realms/task-manager-microservices/protocol/openid-connect/certs

keycloak:
  serverUrl: http://localhost:8280
  realm: task-manager-microservices
  token:
    client_id: api-gateway-service
    client_secret: K8sqcbKrTEl2631n8nynSuGMScjvgJCe
    request: http://localhost:8280/realms/task-manager-microservices/protocol/openid-connect/token

eureka:
  instance:
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 10
  client:
    registry-fetch-interval-seconds: 10
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
  level:
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.security.web.access.intercept.FilterSecurityInterceptor: DEBUG
    org.springframework.security.access.vote.AffirmativeBased: DEBUG
    org.springframework.security.access.vote.AuthenticatedVoter: DEBUG