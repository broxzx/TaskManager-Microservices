server:
  port: 8761

spring:
  application:
    name: eureka-discovery-service

  config:
    import: "optional:configserver:http://config-cloud-service:8888"

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak-task-manager:8080/realms/task-manager-microservices/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            redirect-uri: http://eureka-discovery-service:8761/login/oauth2/code/keycloak
            client-id: eureka-discovery-server
            client-secret: Ufze9Y7r32FTt5TQOL3DFpkg1Wfp48u6
            scope:
              - openid
              - microprofile-jwt
        provider:
          keycloak:
            issuer-uri: http://keycloak-task-manager:8080/realms/task-manager-microservices
            user-name-attribute: preferred_username

eureka:
  client:
    service-url:
      defaultZone: http://eureka-discovery-service:8761/eureka
    fetch-registry: false
    register-with-eureka: false
    registry-fetch-interval-seconds: 5
    initial-instance-info-replication-interval-seconds: 5
    instance-info-replication-interval-seconds: 5
    eureka-service-url-poll-interval-seconds: 5
  instance:
    hostname: localhost
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5
  server:
    enable-self-preservation: true

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus


logging:
  level:
    root: info
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.security.web.access.intercept.FilterSecurityInterceptor: DEBUG
    org.springframework.security.access.vote.AffirmativeBased: DEBUG
    org.springframework.security.access.vote.AuthenticatedVoter: DEBUG
#  file:
#    name: /logs/eureka-discovery-service.log