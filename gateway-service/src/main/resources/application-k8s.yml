server:
  port: 8081

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      mvc:
        routes:
          - id: user-service
            uri: http://user-service:8082
            predicates:
              - Path=/users/**
          - id: project-service
            uri: http://project-service:8083
            predicates:
              - Path=/projects/**
          - id: task-service
            uri: http://task-service:8084
            predicates:
              - Path=/columns/**, /tasks/**

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/task-manager-microservices/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            redirect-uri: http://gateway-service:8081/login/oauth2/code/keycloak
            client-id: api-gateway-service
            client-secret: K8sqcbKrTEl2631n8nynSuGMScjvgJCe
            scope:
              - openid
              - microprofile-jwt
              - metrics
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/task-manager-microservices
            user-name-attribute: preferred_username

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
      validate-group-membership: true
      group:
        liveness:
          show-details: true
          show-components: always
        readiness:
          show-details: true
          show-components: always
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  zipkin:
    tracing:
      endpoint: http://grafana-tempo:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

logging:
  level:
    root: info
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.security.web.access.intercept.FilterSecurityInterceptor: DEBUG
    org.springframework.security.access.vote.AffirmativeBased: DEBUG
    org.springframework.security.access.vote.AuthenticatedVoter: DEBUG
  config: classpath:logback-dev.xml